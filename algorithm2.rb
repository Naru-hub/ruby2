# 1から1000までのフィボナッチ数列を出力する関数を作成してください。
# フィボナッチ数列の定義は下記の通りである。
# フィボナッチ数列とは、最初の二つの数字が1で、三つ目以降がすべて直前の二つの数字の和になっている数列。
# 例) 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89…
answers = [1,1]
while answers.last < 1000 do
  answers.push(answers[-1] + answers[-2])
end

answers.pop
puts answers

# popメソッドとは、rubyのArrayクラスが持っており、配列の末尾の要素を削除するメソッド
# popメソッドに引数を渡すことで、削除する要素の個数を指定することもできru
# 削除された要素は、popメソッドの戻り値として渡され、削除する要素がなかった場合は、nilが返ってくる
p array = [1,2,3]
p array.pop
p array

# [1, 2, 3]
# 3
# [1, 2]

# popメソッドに削除したい要素の個数を引数として渡すことで、対象の配列からその個数分の要素を削除
p array = [1,2,3]
p array.pop(2)   #popメソッドに引数2を渡し、arrayの末尾の要素を2つ削除
p array

# [1, 2, 3]
# [2, 3]
# [1]

# popメソッドの類似メソッドとして、shiftメソッド
# popメソッドは配列の末尾の要素を削除するメソッドだったのに対し、shiftメソッドは配列の先頭の要素を削除する

p array = [1,2,3]
p array.shift    # 先頭の要素を削除
p array

# [1, 2, 3]
# 1
# [2, 3]

p array = [1,2,3]
p array.shift(2)  # 先頭の要素を2つ削除
p array

# [1, 2, 3]
# [1, 2]
# [3]

# popメソッドの類似メソッドのpushメソッド
# popメソッドは配列の末尾の要素を削除しますが、pushメソッドは配列の末尾に要素を追加するメソッド
# pushメソッドは、末尾に追加したい要素を引数で渡します。
# 引数に複数要素を入れてあげるだけで、末尾に複数の要素を追加できる　
# popメソッドやshiftメソッドと違い、pushメソッドは追加した配列自身が戻り値となることに注意が必要

# 末尾に要素を追加
p array = [1, 2, 3, 4]
p array.push(5)
p array

# 末尾に複数要素を追加
p array = [1, 2, 3, 4]
p array.push(5, 6)
p array

# [1, 2, 3, 4]
# [1, 2, 3, 4, 5]
# [1, 2, 3, 4, 5]
# [1, 2, 3, 4]
# [1, 2, 3, 4, 5, 6]
# [1, 2, 3, 4, 5, 6]
